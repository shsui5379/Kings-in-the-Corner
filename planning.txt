Variables:
An array to contain HTML Collections
HTML collections for side image elements, top/bottom image elements and corner elements
Broadcaster that holds Card objects for spaces on the board to read which card just got drawn off the deck
    during removal phase, stored Card is used to track which Card was clicked
High score
current score
Boolean to determine if it's removal phase
powerup storage

Functions:
rng [done]
toggle instructions [done]
initialize to call objects to be created and attached to the appropriate html element [done]
Un/hide the instructions [done]
Reset that clears the board, score and prepares a new deck of cards [done]
Checking for combos that add to 10, by checking for the existance of 10, 5 where first index != last index, 1+9, 2+8, 3+7, 4+6 [done]
^and a version of that for triple play
check if a card can go in a space [done]
    Allowed spaces: 
    Jacks in the sides
    Queens in the top/bottom
    Kings in the corner
    Everything else can go anywhere
Check if the player lost by: 
    lost if broadcasted card: [done]
    Jack: Check if the side section indicates 4 occupied spaces
    Queen: Check top/bottom section for the same
    King: Check the corner section for the same
    When entering removal phase: check if there are no combos adding to 10 when all spaces are filled [done]
Check if player can exit removal phase by determining if there are no more combos adding to 10 [done]
Check if it's the removal phase by checking each section to see if they all have 4 cards [done]
Update score.  On placement of picture card, add 1.  For each section, if all of the cards are royals, add 4 points [done]
Check if the player won when going into removal phase, by going through each section to determine if they're all royals [done]
    on victory, add 12 points to score.  Then add x points, where x is the length of the CardDeck
Check if the player should be awarded a powerup.  Check when a section has all 4 spaces occupied.  Then, check if the player got a powerup yet.  If not, then check if all 4 cards are royals.  If so: [done]
    4 Kings: give card peek
    4 Queens: give triple player
    4 Jacks: give jump
powerup button visibiliy [done]
    no powerup: hide
    jump or peek: show during non-removal phase only
    triple play: show during removal phase only
execution of powerups
updating score and high score [done]


Objects: [done]
Cards: value and src properties
CardDeck: like an array, but has a shuffling and card drawing
    to be added as a property of the deck in the center
CardSpace: has a method for reading the broadcaster to determine if the drawn card can go there
    has properties to store which card is occupying the space and which board section it's located in
    to be added as a property of each card space element
HTMLCollections have added methods for determining if all the spaces are occupied, and if they're all royals

Interface:
Image of a deck in the center (cardback) [done]
    removes top card the CardDeck onclick [done]
4x4 board, showing outlines of locations where a card could go [done]
    Each location is its own image element, so its src can be updated with card faces [done]
    On click, element calls its own CardSpace's method for checking if the flipped card can go there [done]
Card drawn off the top of the deck replaces deck's src [done]
Reset button on bottom right [done]
Score on bottom [done]
Instructions button on bottom left [done]
Message board below title to tell if player is in removal phase, powerups, win or lose [done]
Button on right side for using powerup [done]


Flow:
Create Card objects for each card in a deck [done]
Push the Cards into a CardDeck [done]
Call the CardDeck's shuffling method [done]
Create an array of HTML collections for each set of spaces (top/bottom, sides, corners) [done]
For each element of each collection, give them a CardSpace that's aware of which section of the board it's located in [done]

Repeat while not in removal phase: 
When the center deck is clicked, set the broadcaster equal to the shift of the deck [done]
if the player has the card peek powerup and powerup button is clicked, also show the next card on the side [done]
Replace the deck's src with the shifted card's [done]
Call function to determine if the player lost yet [done]
Player is to click on a space on the board.  [done]
On click of a space, check if the space already has a card property.  If not, check the broadcasted card's value.  If it's allowed into that space, then transfer the broadcasted card to be a property of that CardSpace, and update the element's src [done]
    Allowed spaces: 
    Jacks in the sides
    Queens in the top/bottom
    Kings in the corner
    Everything else can go anywhere
If the player has the jump powerup and presses the powerup button, the player can click on a card.  Check that the space does have a card then store it in the broadcastesr.  Then, the user can click on another space.  Check that the space doesn't already have a card, then check if the card is allowed to be moved there.  If so, attach that card to that space and remove the card from original space.  [done]
On successful placement of a picture card, increase the score by 1. [done]
Check if card placement completes a royalty.  If so, add 4 points [done]
Call function to determine if the player should be awarded a powerup [done]
Call function to determine if it's removal phase [done]

Repeat while in removal phase:
Call function to see if player won or lost when entering removal phase [done]
During removal phase, clicking a card space would store that Card into the broadcaster.  On click of a second card, sum the clicked space's Card's value with the broadcasted Card's value and determine if sum is 10, then those 2 card spaces lose their card property and use the blank space src [done]
If the player has the triple play powerup and the powerup button is pressed, allow choosing 3 cards
Call function to determine if player can return from removal phase [done]